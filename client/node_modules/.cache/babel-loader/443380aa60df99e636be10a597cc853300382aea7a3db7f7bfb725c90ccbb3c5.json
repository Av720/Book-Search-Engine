{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\valen\\\\Book-Search-Engine\\\\client\\\\src\\\\pages\\\\SavedBooks.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { GET_ME } from '../utils/queries';\nimport { REMOVE_BOOK } from '../utils/mutations';\nimport { removeBookId } from '../utils/localStorage';\nimport Auth from '../utils/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SavedBooks = () => {\n  _s();\n  var _userData$savedBooks, _userData$savedBooks2;\n  const {\n    loading,\n    data\n  } = useQuery(GET_ME);\n  const [removeBook, {\n    error\n  }] = useMutation(REMOVE_BOOK);\n  const userData = (data === null || data === void 0 ? void 0 : data.me) || {};\n\n  // create function that accepts the book's _id value as param and deletes the book from the database\n  const handleDeleteBook = async bookId => {\n    // get token\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n    if (!token) {\n      return false;\n    }\n    try {\n      await removeBook({\n        variables: {\n          bookId\n        }\n      });\n\n      // upon success, remove book's id from localStorage\n      removeBookId(bookId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"LOADING...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Jumbotron, {\n      fluid: true,\n      className: \"text-light bg-dark\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Viewing \", userData.username, \"'s books!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: (_userData$savedBooks = userData.savedBooks) !== null && _userData$savedBooks !== void 0 && _userData$savedBooks.length ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? 'book' : 'books'}:` : 'You have no saved books!'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardColumns, {\n        children: (_userData$savedBooks2 = userData.savedBooks) === null || _userData$savedBooks2 === void 0 ? void 0 : _userData$savedBooks2.map(book => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            border: \"dark\",\n            children: [book.image ? /*#__PURE__*/_jsxDEV(Card.Img, {\n              src: book.image,\n              alt: `The cover for ${book.title}`,\n              variant: \"top\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this) : null, /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: book.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"small\",\n                children: [\"Authors: \", book.authors]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: book.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-block btn-danger\",\n                onClick: () => handleDeleteBook(book.bookId),\n                children: \"Delete this Book!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2\",\n                children: \"Something went wrong...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)]\n          }, book.bookId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(SavedBooks, \"YNr5zEWznJUZb057tKfkZQmowig=\", false, function () {\n  return [useQuery, useMutation];\n});\n_c = SavedBooks;\nexport default SavedBooks;\nvar _c;\n$RefreshReg$(_c, \"SavedBooks\");","map":{"version":3,"names":["React","Jumbotron","Container","CardColumns","Card","Button","useQuery","useMutation","GET_ME","REMOVE_BOOK","removeBookId","Auth","jsxDEV","_jsxDEV","Fragment","_Fragment","SavedBooks","_s","_userData$savedBooks","_userData$savedBooks2","loading","data","removeBook","error","userData","me","handleDeleteBook","bookId","token","loggedIn","getToken","variables","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","fluid","className","username","savedBooks","length","map","book","border","image","Img","src","alt","title","variant","Body","Title","authors","Text","description","onClick","_c","$RefreshReg$"],"sources":["C:/Users/valen/Book-Search-Engine/client/src/pages/SavedBooks.js"],"sourcesContent":["import React from 'react';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { GET_ME } from '../utils/queries';\nimport { REMOVE_BOOK } from '../utils/mutations';\nimport { removeBookId } from '../utils/localStorage';\nimport Auth from '../utils/auth';\n\nconst SavedBooks = () => {\n  const { loading, data } = useQuery(GET_ME);\n  const [removeBook, { error }] = useMutation(REMOVE_BOOK);\n\n  const userData = data?.me || {};\n\n  // create function that accepts the book's _id value as param and deletes the book from the database\n  const handleDeleteBook = async (bookId) => {\n    // get token\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      await removeBook({\n        variables: { bookId },\n      });\n\n      // upon success, remove book's id from localStorage\n      removeBookId(bookId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (loading) {\n    return <h2>LOADING...</h2>;\n  }\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Viewing {userData.username}'s books!</h1>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <h2>\n          {userData.savedBooks?.length\n            ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? 'book' : 'books'\n            }:`\n            : 'You have no saved books!'}\n        </h2>\n        <CardColumns>\n          {userData.savedBooks?.map((book) => {\n            return (\n              <Card key={book.bookId} border='dark'>\n                {book.image ? (\n                  <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className='small'>Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  <Button\n                    className='btn-block btn-danger'\n                    onClick={() => handleDeleteBook(book.bookId)}>\n                    Delete this Book!\n                  </Button>\n                  {error && <span className=\"ml-2\">Something went wrong...</span>}\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedBooks;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}